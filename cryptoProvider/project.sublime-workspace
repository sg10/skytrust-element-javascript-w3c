{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"compon",
				"components〔variable〕"
			],
			[
				"debug",
				"debugPrintComponents〔function〕"
			],
			[
				"compo",
				"component〔argument〕"
			],
			[
				"componen",
				"components〔argument〕"
			],
			[
				"setOpera",
				"setOperationIfValid"
			],
			[
				"setData",
				"setDataIfValid"
			],
			[
				"ini",
				"initOperation"
			],
			[
				"Cry",
				"CryptoKey〔variable〕"
			],
			[
				"isVal",
				"isValidCryptoKey"
			],
			[
				"cry",
				"cryptoKey1〔variable〕"
			],
			[
				"pro",
				"provider"
			],
			[
				"provi",
				"providerDef"
			],
			[
				"Not",
				"NotYetImplementedException"
			],
			[
				"Inva",
				"InvalidState"
			],
			[
				"Invali",
				"InvalidState"
			],
			[
				"No",
				"NoSuchProvider"
			],
			[
				"Inval",
				"InvalidStateError"
			],
			[
				"Inv",
				"InvalidStateError"
			],
			[
				"base",
				"base64ToArrayBuffer"
			],
			[
				"encry",
				"encryptedData"
			],
			[
				"Cr",
				"CryptoKey"
			],
			[
				"instanc",
				"instanceof〔keyword〕"
			],
			[
				"crypt",
				"cryptoKey"
			],
			[
				"strin",
				"stringify"
			],
			[
				"algo",
				"algorithm"
			],
			[
				"CrySILCryp",
				"CrySILCryptoSubtle"
			],
			[
				"CrySILC",
				"CrySILCryptoSubtle〔class〕"
			],
			[
				"CrySI",
				"CrySILCryptoSubtle〔class〕"
			],
			[
				"insta",
				"instanceof〔keyword〕"
			]
		]
	},
	"buffers":
	[
		{
			"file": "js/main.js",
			"settings":
			{
				"buffer_size": 1410,
				"line_ending": "Windows"
			}
		},
		{
			"file": "js/CrySIL/crysil-node/node.js",
			"settings":
			{
				"buffer_size": 2376,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "define(function(require) {\n\n\n    // -------------  load modules  -------------------\n\n    var $ = require('jQuery');\n\n    var E = require('./error');\n    var Config = require('./config');\n    var CryptoKey = require('./key');\n    var CrySILNode = require('./node');\n\n\n    // -------------  private  ------------------------\n\n    var CrySILCryptoSubtle = function (){};\n\n    var crySILNode = new CrySILNode();\n\n    // -------------  public  -------------------------\n\n    var CryptoProvider = function() {\n        this.subtle = new CrySILCryptoSubtle();\n    }\n\n    CrySILCryptoSubtle.prototype.CryptoKey = CryptoKey.create;\n\n\n    /**\n     * The encrypt method returns a new Promise object that will \n     * encrypt data using the specified AlgorithmIdentifier with the supplied CryptoKey.\n     * @method encrypt\n     * @param {} algorithm\n     * @param {} key\n     * @param {} data\n     * @return {Promise|ciphertext} \n     * @throws InvalidAccessError if the usages internal slot of key does not contain an entry that is \"encrypt\", \n     * if an error occurred during normalization of algorithm\n     */\n    CrySILCryptoSubtle.prototype.encrypt = function(algorithm, key, data){\n        crySILNode.\n        \n    }\n\n\n    /**\n     * The decrypt method returns a new Promise object that will \n     * decrypt data using the specified AlgorithmIdentifier with the supplied CryptoKey.\n     * @method decrypt\n     * @param {} algorithm\n     * @param {} key\n     * @param {} data\n     * @return {Promise|plaintext} \n     * @throws InvalidAccessError if the usages internal slot of key does not contain an entry that is \"decrypt\", \n     * if an error occurred during normalization of algorithm\n     */\n    CrySILCryptoSubtle.prototype.decrypt = function(algorithm, key, data){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * The sign method returns a new Promise object that will \n     * sign data using the specified AlgorithmIdentifier with the supplied CryptoKey.\n     * @method sign\n     * @param {} algorithm\n     * @param {} key\n     * @param {} data\n     * @return {Promise|result} \n     * @throws InvalidAccessError if the usages internal slot of key does not contain an entry that is \"sign\", \n     * if an error occurred during normalization of algorithm\n     */\n    CrySILCryptoSubtle.prototype.sign = function(algorithm, key, data){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * The verify method returns a new Promise object that will \n     * verify data using the specified AlgorithmIdentifier with the supplied CryptoKey.\n     * @method verify\n     * @param {} algorithm\n     * @param {} key\n     * @param {} signature\n     * @param {} data\n     * @return {Promise|result} \n     * @throws InvalidAccessError if the usages internal slot of key does not contain an entry that is \"verify\", \n     * if an error occurred during normalization of algorithm \n     */\n    CrySILCryptoSubtle.prototype.verify = function(algorithm, key, signature, data){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * The digest method returns a new Promise object that will \n     * digest data using the specified AlgorithmIdentifier.\n     * @method digest\n     * @param {} algorithm\n     * @param {} data\n     * @return {Promise|result} \n     */\n    CrySILCryptoSubtle.prototype.digest = function(algorithm, data){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * Generates a new CryptoKey or CryptoKeyPair object.\n     * @method generateKey\n     * @param {} algorithm\n     * @param {} extractable\n     * @param {} keyUsages\n     * @return {Promise|result} Let result be the result of executing the generate key operation specified by normalizedAlgorithm using algorithm, extractable and usages. Result can be either a CryptoKey or a CryptoKeyPair\n     * @throws SyntaxError if result is a CryptoKey object and if the type internal slot of result is \"secret\" or \"private\" and usages is empty,\n     * or if result is a CryptoKeyPair object and if the usages internal slot of the privateKey attribute of result is the empty sequence\n     */\n    CrySILCryptoSubtle.prototype.generateKey = function(algorithm, extractable, keyUsages){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * Description\n     * @method deriveKey\n     * @param {} algorithm\n     * @param {} baseKey\n     * @param {} derivedKeyType\n     * @param {} extractable\n     * @param {} keyUsages\n     * @return {Promise|result} Let result be the result of executing the import key operation specified by normalizedDerivedKeyAlgorithm using \"raw\" as format, secret as keyData, derivedKeyType as algorithm and using extractable and usages.\n     * @throws NotSupportedError if the name member of normalizedAlgorithm does not identify a registered algorithm that supports the derive bits operation,\n     * or if the name member of normalizedDerivedKeyAlgorithm does not identify a registered algorithm that supports the get key length operation\n     * @throws InvalidAccessError if the name member of the normalized algorithm is not equal to the name attribute of the algorithm internal slot of baseKey,\n     * or if the usages internal slot of baseKey does not contain an entry that is \"deriveKey\"\n     * @throws SyntaxError if the type internal slot of result is \"secret\" or \"private\" and usages is empty\n     */\n    CrySILCryptoSubtle.prototype.deriveKey = function(algorithm, baseKey, derivedKeyType, extractable, keyUsages){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * Derives bits from a given baseKey.\n     * @method deriveBits\n     * @param {} algorithm\n     * @param {} baseKey\n     * @param {} length\n     * @return {Promise|result} Let result be a new ArrayBuffer containing the result of executing the derive bits operation specified by normalizedAlgorithm using baseKey, algorithm and length.\n     * @throws InvalidAccessError if the name member of the normalized algorithm is not equal to the name attribute of the algorithm internal slot of baseKey,\n     * or if the usages internal slot of baseKey does not contain an entry that is \"deriveBits\"\n     */\n    CrySILCryptoSubtle.prototype.deriveBits = function(algorithm, baseKey, length){\n        throw new E.NotYetImplementedException();\n    };\n\n\n    /**\n     * Exports a key.\n     * @method exportKey\n     * @param {} format\n     * @param {} key\n     * @return {Promise|result} Let result be the result of performing the export key operation specified by the algorithm internal slot of key using key and format.\n     * @throws InvalidAccessError if the extractable internal slot of key is false\n     */\n    CrySILCryptoSubtle.prototype.exportKey = function(format, key){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * Wrap key method.\n     * @method wrapKey\n     * @param {} format\n     * @param {} key\n     * @param {} wrappingKey\n     * @param {} wrapAlgorithm\n     * @return {Promise|result} \n     * @throws InvalidAccessError if the usages internal slot of wrappingKey does not contain an entry that is \"wrapKey\"\n     * @throws NotSupportedError If the name member of normalized algorithm does not identify a registered algorithm that supports the encrypt or wrap key operation,\n     * or if the name member of normalized algorithm is not equal to the name attribute of the algorithm internal slot of wrappingKey,\n     * or if the algorithm identified by the algorithm internal slot of key does not support the export key operation,\n     * or if the extractable internal slot of key is false\n     */\n    CrySILCryptoSubtle.prototype.wrapKey = function(format, key, wrappingKey, wrapAlgorithm){\n        throw new E.NotYetImplementedException();\n    };\n\n    /**\n     * Unwrap key method.\n     * @method unwrapKey\n     * @param {} format\n     * @param {} wrappedKey\n     * @param {} unwrappingKey\n     * @param {} unwrapAlgorithm\n     * @param {} unwrappedKeyAlgorithm\n     * @param {} extractable\n     * @param {} keyUsages\n     * @return {Promise|result} \n     * @throws InvalidAccessError\n     * @throws NotSupportedError\n     * @throws Syntax Error if the type internal slot of result is \"secret\" or \"private\" and usages is empty\n     */\n    CrySILCryptoSubtle.prototype.unwrapKey = function(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages){\n        throw new E.NotYetImplementedException();\n    };\n\n\n\n    return CryptoProvider;\n\n});",
			"file": "js/CrySIL/provider.js",
			"file_size": 8452,
			"file_write_time": 130698705954775642,
			"settings":
			{
				"buffer_size": 8471,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/CrySIL/crysil-node/communication.js",
			"settings":
			{
				"buffer_size": 1313,
				"line_ending": "Windows"
			}
		},
		{
			"file": "js/CrySIL/crysil-node/receiver.js",
			"settings":
			{
				"buffer_size": 2824,
				"line_ending": "Windows"
			}
		},
		{
			"file": "js/CrySIL/crysil-node/crypto-object.js",
			"settings":
			{
				"buffer_size": 2071,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"web",
				"Web Inspector"
			],
			[
				"web ins",
				"Web Inspector"
			],
			[
				"web i",
				"Web Inspector"
			],
			[
				"web in",
				"Web Inspector"
			],
			[
				"insp",
				"Web Inspector"
			],
			[
				"codefor",
				"CodeFormatter: Format as Javascript Syntax"
			],
			[
				"code form",
				"CodeFormatter: Format as Javascript Syntax"
			],
			[
				"formatc",
				"CodeFormatter: Format Code"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib2,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation') ",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node"
	],
	"file_history":
	[
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/providerDef.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/error.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/key.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/keyStore.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/util.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/crypto-object.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/component.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/actorplus.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/authentication.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/communication.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/providerDef.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/main.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/receiver.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/node.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/provider.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/provider.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/.subl384.tmp",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/crySILTest.html",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/.subl876.tmp",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/actor+.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/crysil-node/abstract-component.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/authentication.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/node-crypto-object.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/abstract-node-component.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/node-communication.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/provider.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/node-receiver.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/node-auth.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/CrySIL/node-actor+.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/.subl65f.tmp",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/.subl6d4.tmp",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/config.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySIL/test.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/cryptoKeyStore.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySILConfig.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/cryptoProviderError.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/cryptoProviderUtil.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/crySILCryptoProvider.js",
		"/C/Users/Stefan/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/Promise.min.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/js/cryptoProviderDef.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/crySILCryptoProvider.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/cryptoProviderDef.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/cryptoProviderError.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/cryptoProviderUtil.js",
		"/P/Uni/6. Semester/705.002 - Bachelorarbeit Telematik, IAIK/skytrust-element-javascript-w3c/cryptoProvider/Promise.min.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"<open folders>",
			"P:\\Uni\\6. Semester\\705.002 - Bachelorarbeit Telematik, IAIK\\skytrust-element-javascript-w3c\\cryptoProvider,<open files>",
			"P:\\Uni\\6. Semester\\705.002 - Bachelorarbeit Telematik, IAIK\\skytrust-element-javascript-w3c\\cryptoProvider"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"provider",
			"E.E.",
			"Receiver",
			"onReceive",
			"getNewName",
			"node1.Component",
			"c2",
			"c1",
			"onReceived",
			"NotYetImplementedException",
			"\n<",
			"crysil",
			"crysil\n",
			" \n",
			"window.crypto.crySILConfig",
			" \n",
			"cp",
			"alert",
			"\n        ",
			",\n",
			" \n",
			"	",
			"\n    ",
			"CordovaCryptoSubtle",
			"CordovaCryptoProvider"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"E.",
			"Communication",
			"getNewID",
			"Component",
			"cAuthentication",
			"cReceiver",
			"onReceive",
			"E.NotYetImplementedException",
			"CrySIL",
			"",
			"config",
			"provider",
			"    ",
			"   ",
			"CrySILCryptoSubtle",
			"CrySILCryptoProvider"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"follow_symlinks": true,
			"path": "P:\\Uni\\6. Semester\\705.002 - Bachelorarbeit Telematik, IAIK\\skytrust-element-javascript-w3c\\cryptoProvider"
		}
	],
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "js/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1410,
						"regions":
						{
						},
						"selection":
						[
							[
								569,
								569
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "js/CrySIL/crysil-node/node.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2376,
						"regions":
						{
						},
						"selection":
						[
							[
								2330,
								2330
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1425.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js/CrySIL/provider.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8471,
						"regions":
						{
						},
						"selection":
						[
							[
								1197,
								1197
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js/CrySIL/crysil-node/communication.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1313,
						"regions":
						{
						},
						"selection":
						[
							[
								1088,
								1094
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "js/CrySIL/crysil-node/receiver.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2824,
						"regions":
						{
						},
						"selection":
						[
							[
								1172,
								1172
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1145.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "js/CrySIL/crysil-node/crypto-object.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2071,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 798.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 124.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 234.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
